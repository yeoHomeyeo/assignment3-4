name: Build and Push Docker Image to ECR

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cy-flask-private-repository
          IMAGE_TAG_LATEST: latest
          IMAGE_TAG_SHA: ${{ github.sha }} # Accessing the GitHub commit SHA
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_SHA .
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST"
          echo "::set-output name=image_sha::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_SHA"

      - name: Push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cy-flask-private-repository
          IMAGE_TAG_LATEST: latest
          IMAGE_TAG_SHA: ${{ steps.build-image.outputs.image_sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_SHA

      - name: Output image URI (latest)
        run: echo 'ECR Image URI (latest): ${{ steps.build-image.outputs.image }}'
      - name: Output image URI (SHA)
        run: echo 'ECR Image URI (SHA): ${{ steps.build-image.outputs.image_sha }}'